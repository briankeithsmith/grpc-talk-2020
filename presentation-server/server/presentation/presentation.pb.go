// Code generated by protoc-gen-go. DO NOT EDIT.
// source: presentation.proto

package presentation

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PresentationUpdate struct {
	SlideName            string   `protobuf:"bytes,1,opt,name=SlideName,proto3" json:"SlideName,omitempty"`
	SubSlide             int32    `protobuf:"varint,2,opt,name=SubSlide,proto3" json:"SubSlide,omitempty"`
	IsActive             bool     `protobuf:"varint,3,opt,name=IsActive,proto3" json:"IsActive,omitempty"`
	IsPing               bool     `protobuf:"varint,4,opt,name=IsPing,proto3" json:"IsPing,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PresentationUpdate) Reset()         { *m = PresentationUpdate{} }
func (m *PresentationUpdate) String() string { return proto.CompactTextString(m) }
func (*PresentationUpdate) ProtoMessage()    {}
func (*PresentationUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_f16293ba8a203772, []int{0}
}

func (m *PresentationUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PresentationUpdate.Unmarshal(m, b)
}
func (m *PresentationUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PresentationUpdate.Marshal(b, m, deterministic)
}
func (m *PresentationUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PresentationUpdate.Merge(m, src)
}
func (m *PresentationUpdate) XXX_Size() int {
	return xxx_messageInfo_PresentationUpdate.Size(m)
}
func (m *PresentationUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_PresentationUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_PresentationUpdate proto.InternalMessageInfo

func (m *PresentationUpdate) GetSlideName() string {
	if m != nil {
		return m.SlideName
	}
	return ""
}

func (m *PresentationUpdate) GetSubSlide() int32 {
	if m != nil {
		return m.SubSlide
	}
	return 0
}

func (m *PresentationUpdate) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *PresentationUpdate) GetIsPing() bool {
	if m != nil {
		return m.IsPing
	}
	return false
}

type ChatMessage struct {
	User                 string   `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	MessageId            string   `protobuf:"bytes,4,opt,name=MessageId,proto3" json:"MessageId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f16293ba8a203772, []int{1}
}

func (m *ChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessage.Unmarshal(m, b)
}
func (m *ChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessage.Marshal(b, m, deterministic)
}
func (m *ChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessage.Merge(m, src)
}
func (m *ChatMessage) XXX_Size() int {
	return xxx_messageInfo_ChatMessage.Size(m)
}
func (m *ChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessage proto.InternalMessageInfo

func (m *ChatMessage) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ChatMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ChatMessage) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ChatMessage) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

type ChatMessageResponse struct {
	Error                bool         `protobuf:"varint,1,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage         string       `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
	Message              *ChatMessage `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ChatMessageResponse) Reset()         { *m = ChatMessageResponse{} }
func (m *ChatMessageResponse) String() string { return proto.CompactTextString(m) }
func (*ChatMessageResponse) ProtoMessage()    {}
func (*ChatMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f16293ba8a203772, []int{2}
}

func (m *ChatMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessageResponse.Unmarshal(m, b)
}
func (m *ChatMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessageResponse.Marshal(b, m, deterministic)
}
func (m *ChatMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessageResponse.Merge(m, src)
}
func (m *ChatMessageResponse) XXX_Size() int {
	return xxx_messageInfo_ChatMessageResponse.Size(m)
}
func (m *ChatMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessageResponse proto.InternalMessageInfo

func (m *ChatMessageResponse) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *ChatMessageResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *ChatMessageResponse) GetMessage() *ChatMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type ActivePresentationResponse struct {
	Error                bool                `protobuf:"varint,1,opt,name=Error,proto3" json:"Error,omitempty"`
	Current              *PresentationUpdate `protobuf:"bytes,2,opt,name=Current,proto3" json:"Current,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ActivePresentationResponse) Reset()         { *m = ActivePresentationResponse{} }
func (m *ActivePresentationResponse) String() string { return proto.CompactTextString(m) }
func (*ActivePresentationResponse) ProtoMessage()    {}
func (*ActivePresentationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f16293ba8a203772, []int{3}
}

func (m *ActivePresentationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivePresentationResponse.Unmarshal(m, b)
}
func (m *ActivePresentationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivePresentationResponse.Marshal(b, m, deterministic)
}
func (m *ActivePresentationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivePresentationResponse.Merge(m, src)
}
func (m *ActivePresentationResponse) XXX_Size() int {
	return xxx_messageInfo_ActivePresentationResponse.Size(m)
}
func (m *ActivePresentationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivePresentationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivePresentationResponse proto.InternalMessageInfo

func (m *ActivePresentationResponse) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *ActivePresentationResponse) GetCurrent() *PresentationUpdate {
	if m != nil {
		return m.Current
	}
	return nil
}

type UpdatePresentationRequest struct {
	Password             string   `protobuf:"bytes,1,opt,name=Password,proto3" json:"Password,omitempty"`
	IsActive             bool     `protobuf:"varint,2,opt,name=IsActive,proto3" json:"IsActive,omitempty"`
	SlideName            string   `protobuf:"bytes,3,opt,name=SlideName,proto3" json:"SlideName,omitempty"`
	SubSlide             int32    `protobuf:"varint,4,opt,name=SubSlide,proto3" json:"SubSlide,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePresentationRequest) Reset()         { *m = UpdatePresentationRequest{} }
func (m *UpdatePresentationRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePresentationRequest) ProtoMessage()    {}
func (*UpdatePresentationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f16293ba8a203772, []int{4}
}

func (m *UpdatePresentationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePresentationRequest.Unmarshal(m, b)
}
func (m *UpdatePresentationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePresentationRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePresentationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePresentationRequest.Merge(m, src)
}
func (m *UpdatePresentationRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePresentationRequest.Size(m)
}
func (m *UpdatePresentationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePresentationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePresentationRequest proto.InternalMessageInfo

func (m *UpdatePresentationRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UpdatePresentationRequest) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *UpdatePresentationRequest) GetSlideName() string {
	if m != nil {
		return m.SlideName
	}
	return ""
}

func (m *UpdatePresentationRequest) GetSubSlide() int32 {
	if m != nil {
		return m.SubSlide
	}
	return 0
}

type UpdatePresentationResponse struct {
	Error                bool     `protobuf:"varint,1,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePresentationResponse) Reset()         { *m = UpdatePresentationResponse{} }
func (m *UpdatePresentationResponse) String() string { return proto.CompactTextString(m) }
func (*UpdatePresentationResponse) ProtoMessage()    {}
func (*UpdatePresentationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f16293ba8a203772, []int{5}
}

func (m *UpdatePresentationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePresentationResponse.Unmarshal(m, b)
}
func (m *UpdatePresentationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePresentationResponse.Marshal(b, m, deterministic)
}
func (m *UpdatePresentationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePresentationResponse.Merge(m, src)
}
func (m *UpdatePresentationResponse) XXX_Size() int {
	return xxx_messageInfo_UpdatePresentationResponse.Size(m)
}
func (m *UpdatePresentationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePresentationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePresentationResponse proto.InternalMessageInfo

func (m *UpdatePresentationResponse) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

type PostChatMessageResponse struct {
	Error                bool     `protobuf:"varint,1,opt,name=Error,proto3" json:"Error,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
	MessageId            string   `protobuf:"bytes,3,opt,name=MessageId,proto3" json:"MessageId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostChatMessageResponse) Reset()         { *m = PostChatMessageResponse{} }
func (m *PostChatMessageResponse) String() string { return proto.CompactTextString(m) }
func (*PostChatMessageResponse) ProtoMessage()    {}
func (*PostChatMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f16293ba8a203772, []int{6}
}

func (m *PostChatMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostChatMessageResponse.Unmarshal(m, b)
}
func (m *PostChatMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostChatMessageResponse.Marshal(b, m, deterministic)
}
func (m *PostChatMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostChatMessageResponse.Merge(m, src)
}
func (m *PostChatMessageResponse) XXX_Size() int {
	return xxx_messageInfo_PostChatMessageResponse.Size(m)
}
func (m *PostChatMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostChatMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostChatMessageResponse proto.InternalMessageInfo

func (m *PostChatMessageResponse) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *PostChatMessageResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *PostChatMessageResponse) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func init() {
	proto.RegisterType((*PresentationUpdate)(nil), "presentation.PresentationUpdate")
	proto.RegisterType((*ChatMessage)(nil), "presentation.ChatMessage")
	proto.RegisterType((*ChatMessageResponse)(nil), "presentation.ChatMessageResponse")
	proto.RegisterType((*ActivePresentationResponse)(nil), "presentation.ActivePresentationResponse")
	proto.RegisterType((*UpdatePresentationRequest)(nil), "presentation.UpdatePresentationRequest")
	proto.RegisterType((*UpdatePresentationResponse)(nil), "presentation.UpdatePresentationResponse")
	proto.RegisterType((*PostChatMessageResponse)(nil), "presentation.PostChatMessageResponse")
}

func init() { proto.RegisterFile("presentation.proto", fileDescriptor_f16293ba8a203772) }

var fileDescriptor_f16293ba8a203772 = []byte{
	// 469 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xd5, 0xd6, 0x69, 0x9b, 0x4c, 0x22, 0x81, 0x06, 0x54, 0x5c, 0xc3, 0x21, 0xac, 0x84, 0xc8,
	0xc9, 0xad, 0xd2, 0x1b, 0x37, 0x54, 0x55, 0x28, 0x48, 0x44, 0xd1, 0x86, 0x7c, 0x80, 0x43, 0x06,
	0x63, 0xa9, 0xf1, 0xba, 0xbb, 0x1b, 0x2a, 0xae, 0x88, 0x2b, 0x1f, 0xc5, 0x9f, 0x21, 0xaf, 0x9d,
	0xc4, 0x6b, 0x6a, 0x87, 0x43, 0x6f, 0x9e, 0x37, 0x63, 0xbf, 0xe7, 0x79, 0x6f, 0x00, 0x33, 0x45,
	0x9a, 0x52, 0x13, 0x99, 0x44, 0xa6, 0x61, 0xa6, 0xa4, 0x91, 0x38, 0xa8, 0x62, 0xc1, 0xcb, 0x58,
	0xca, 0xf8, 0x96, 0x2e, 0x6c, 0x6f, 0xb9, 0xf9, 0x7a, 0x41, 0xeb, 0xcc, 0xfc, 0x28, 0x46, 0xf9,
	0x4f, 0x06, 0x38, 0xab, 0x4c, 0x2f, 0xb2, 0x55, 0x64, 0x08, 0x5f, 0x41, 0x6f, 0x7e, 0x9b, 0xac,
	0x68, 0x1a, 0xad, 0xc9, 0x67, 0x43, 0x36, 0xea, 0x89, 0x3d, 0x80, 0x01, 0x74, 0xe7, 0x9b, 0xa5,
	0xad, 0xfd, 0xa3, 0x21, 0x1b, 0x1d, 0x8b, 0x5d, 0x9d, 0xf7, 0x26, 0xfa, 0xfd, 0x17, 0x93, 0x7c,
	0x27, 0xdf, 0x1b, 0xb2, 0x51, 0x57, 0xec, 0x6a, 0x3c, 0x83, 0x93, 0x89, 0x9e, 0x25, 0x69, 0xec,
	0x77, 0x6c, 0xa7, 0xac, 0xf8, 0x3d, 0xf4, 0xaf, 0xbf, 0x45, 0xe6, 0x13, 0x69, 0x1d, 0xc5, 0x84,
	0x08, 0x9d, 0x85, 0x26, 0x55, 0xf2, 0xda, 0x67, 0xf4, 0xe1, 0xb4, 0x6c, 0x5b, 0xc6, 0x9e, 0xd8,
	0x96, 0xb9, 0xd4, 0xcf, 0xc9, 0x9a, 0xb4, 0x89, 0xd6, 0x99, 0x65, 0xf4, 0xc4, 0x1e, 0xc8, 0xbb,
	0xe5, 0xe0, 0x64, 0x65, 0x59, 0x7b, 0x62, 0x0f, 0xf0, 0x5f, 0x0c, 0x9e, 0x55, 0x98, 0x05, 0xe9,
	0x4c, 0xa6, 0x9a, 0xf0, 0x39, 0x1c, 0xdf, 0x28, 0x25, 0x0b, 0x09, 0x5d, 0x51, 0x14, 0xc8, 0x61,
	0x60, 0x1f, 0x5c, 0x21, 0x0e, 0x86, 0x57, 0x7b, 0x9d, 0xb9, 0x96, 0xfe, 0xf8, 0x3c, 0x74, 0x0c,
	0xaa, 0xb2, 0x6d, 0x27, 0x79, 0x0a, 0x41, 0xb1, 0xa1, 0xaa, 0x13, 0x07, 0xc4, 0xbc, 0x83, 0xd3,
	0xeb, 0x8d, 0x52, 0x94, 0x1a, 0xab, 0xa3, 0x3f, 0x1e, 0xba, 0x44, 0xff, 0x9a, 0x2a, 0xb6, 0x2f,
	0xf0, 0xdf, 0x0c, 0xce, 0x0b, 0xcc, 0x25, 0xbc, 0xdb, 0x90, 0x36, 0xb9, 0x83, 0xb3, 0x48, 0xeb,
	0x7b, 0xa9, 0x56, 0xa5, 0x05, 0xbb, 0xda, 0x71, 0xf7, 0xa8, 0xe6, 0xae, 0x93, 0x19, 0xaf, 0x2d,
	0x33, 0x1d, 0x37, 0x33, 0x7c, 0x0c, 0xc1, 0x43, 0x72, 0xda, 0xfe, 0x9f, 0xdf, 0xc1, 0x8b, 0x99,
	0xd4, 0xe6, 0x71, 0xdd, 0x73, 0xd2, 0xe2, 0xd5, 0xd2, 0x32, 0xfe, 0xe3, 0xc1, 0xa0, 0xaa, 0x10,
	0xe7, 0xf0, 0xe4, 0x03, 0x19, 0x07, 0x3a, 0x0b, 0x8b, 0x6b, 0x0b, 0xb7, 0xd7, 0x16, 0xde, 0xe4,
	0xd7, 0x16, 0x8c, 0x5c, 0x77, 0x5a, 0xec, 0x8e, 0x01, 0x17, 0x99, 0x26, 0xe5, 0x7e, 0xf7, 0xad,
	0xfb, 0x7e, 0xa3, 0x7b, 0x75, 0xa2, 0x96, 0xbd, 0x4e, 0xe1, 0xe9, 0x47, 0x99, 0xa4, 0xff, 0x25,
	0xff, 0x60, 0xb8, 0x2e, 0x19, 0x4e, 0xed, 0x36, 0x2a, 0x86, 0xe8, 0xc6, 0xcf, 0xbd, 0x6e, 0x3e,
	0x8a, 0x52, 0xdd, 0x25, 0xcb, 0xb7, 0x5b, 0x73, 0x18, 0x9b, 0x8f, 0x29, 0x78, 0x53, 0x53, 0xf8,
	0x70, 0x36, 0x96, 0x27, 0x56, 0xc9, 0xd5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x98, 0xda, 0x03,
	0x06, 0x37, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PresentationClient is the client API for Presentation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PresentationClient interface {
	GetPresentation(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ActivePresentationResponse, error)
	UpsertPresentation(ctx context.Context, in *UpdatePresentationRequest, opts ...grpc.CallOption) (*UpdatePresentationResponse, error)
	JoinPresentation(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Presentation_JoinPresentationClient, error)
	GetChatMessages(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Presentation_GetChatMessagesClient, error)
	PostChatMessage(ctx context.Context, in *ChatMessage, opts ...grpc.CallOption) (*PostChatMessageResponse, error)
}

type presentationClient struct {
	cc *grpc.ClientConn
}

func NewPresentationClient(cc *grpc.ClientConn) PresentationClient {
	return &presentationClient{cc}
}

func (c *presentationClient) GetPresentation(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ActivePresentationResponse, error) {
	out := new(ActivePresentationResponse)
	err := c.cc.Invoke(ctx, "/presentation.Presentation/GetPresentation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *presentationClient) UpsertPresentation(ctx context.Context, in *UpdatePresentationRequest, opts ...grpc.CallOption) (*UpdatePresentationResponse, error) {
	out := new(UpdatePresentationResponse)
	err := c.cc.Invoke(ctx, "/presentation.Presentation/UpsertPresentation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *presentationClient) JoinPresentation(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Presentation_JoinPresentationClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Presentation_serviceDesc.Streams[0], "/presentation.Presentation/JoinPresentation", opts...)
	if err != nil {
		return nil, err
	}
	x := &presentationJoinPresentationClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Presentation_JoinPresentationClient interface {
	Recv() (*PresentationUpdate, error)
	grpc.ClientStream
}

type presentationJoinPresentationClient struct {
	grpc.ClientStream
}

func (x *presentationJoinPresentationClient) Recv() (*PresentationUpdate, error) {
	m := new(PresentationUpdate)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *presentationClient) GetChatMessages(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Presentation_GetChatMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Presentation_serviceDesc.Streams[1], "/presentation.Presentation/GetChatMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &presentationGetChatMessagesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Presentation_GetChatMessagesClient interface {
	Recv() (*ChatMessageResponse, error)
	grpc.ClientStream
}

type presentationGetChatMessagesClient struct {
	grpc.ClientStream
}

func (x *presentationGetChatMessagesClient) Recv() (*ChatMessageResponse, error) {
	m := new(ChatMessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *presentationClient) PostChatMessage(ctx context.Context, in *ChatMessage, opts ...grpc.CallOption) (*PostChatMessageResponse, error) {
	out := new(PostChatMessageResponse)
	err := c.cc.Invoke(ctx, "/presentation.Presentation/PostChatMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PresentationServer is the server API for Presentation service.
type PresentationServer interface {
	GetPresentation(context.Context, *empty.Empty) (*ActivePresentationResponse, error)
	UpsertPresentation(context.Context, *UpdatePresentationRequest) (*UpdatePresentationResponse, error)
	JoinPresentation(*empty.Empty, Presentation_JoinPresentationServer) error
	GetChatMessages(*empty.Empty, Presentation_GetChatMessagesServer) error
	PostChatMessage(context.Context, *ChatMessage) (*PostChatMessageResponse, error)
}

// UnimplementedPresentationServer can be embedded to have forward compatible implementations.
type UnimplementedPresentationServer struct {
}

func (*UnimplementedPresentationServer) GetPresentation(ctx context.Context, req *empty.Empty) (*ActivePresentationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPresentation not implemented")
}
func (*UnimplementedPresentationServer) UpsertPresentation(ctx context.Context, req *UpdatePresentationRequest) (*UpdatePresentationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertPresentation not implemented")
}
func (*UnimplementedPresentationServer) JoinPresentation(req *empty.Empty, srv Presentation_JoinPresentationServer) error {
	return status.Errorf(codes.Unimplemented, "method JoinPresentation not implemented")
}
func (*UnimplementedPresentationServer) GetChatMessages(req *empty.Empty, srv Presentation_GetChatMessagesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetChatMessages not implemented")
}
func (*UnimplementedPresentationServer) PostChatMessage(ctx context.Context, req *ChatMessage) (*PostChatMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostChatMessage not implemented")
}

func RegisterPresentationServer(s *grpc.Server, srv PresentationServer) {
	s.RegisterService(&_Presentation_serviceDesc, srv)
}

func _Presentation_GetPresentation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PresentationServer).GetPresentation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/presentation.Presentation/GetPresentation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PresentationServer).GetPresentation(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Presentation_UpsertPresentation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePresentationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PresentationServer).UpsertPresentation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/presentation.Presentation/UpsertPresentation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PresentationServer).UpsertPresentation(ctx, req.(*UpdatePresentationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Presentation_JoinPresentation_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PresentationServer).JoinPresentation(m, &presentationJoinPresentationServer{stream})
}

type Presentation_JoinPresentationServer interface {
	Send(*PresentationUpdate) error
	grpc.ServerStream
}

type presentationJoinPresentationServer struct {
	grpc.ServerStream
}

func (x *presentationJoinPresentationServer) Send(m *PresentationUpdate) error {
	return x.ServerStream.SendMsg(m)
}

func _Presentation_GetChatMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PresentationServer).GetChatMessages(m, &presentationGetChatMessagesServer{stream})
}

type Presentation_GetChatMessagesServer interface {
	Send(*ChatMessageResponse) error
	grpc.ServerStream
}

type presentationGetChatMessagesServer struct {
	grpc.ServerStream
}

func (x *presentationGetChatMessagesServer) Send(m *ChatMessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Presentation_PostChatMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PresentationServer).PostChatMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/presentation.Presentation/PostChatMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PresentationServer).PostChatMessage(ctx, req.(*ChatMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Presentation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "presentation.Presentation",
	HandlerType: (*PresentationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPresentation",
			Handler:    _Presentation_GetPresentation_Handler,
		},
		{
			MethodName: "UpsertPresentation",
			Handler:    _Presentation_UpsertPresentation_Handler,
		},
		{
			MethodName: "PostChatMessage",
			Handler:    _Presentation_PostChatMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "JoinPresentation",
			Handler:       _Presentation_JoinPresentation_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetChatMessages",
			Handler:       _Presentation_GetChatMessages_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "presentation.proto",
}
